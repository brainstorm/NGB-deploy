---
- name: Install python and docker essentials
  become: true
  package:
      name: "{{ item }}"
      update_cache: yes
  with_items:
        - python3-pip
        - bwa
        - samtools

- name: Add user to docker group
  become: true
  user:
      name: "{{ item }}"
      groups: docker
      append: yes
  with_items:
    - ubuntu
    - vagrant

- name: Make sure vital python packages are installed system-wide 
  become: true
  pip:
    name: [ "docker-py", "awscli", "boto3", "botocore" ]
    state: latest

- name: Pull NGB docker container
  become: true
  docker_image:
    name: umccr/ngb
    tag: latest
    state: present

- name: Run NGB
  become: true
  docker_container:
    name: ngbcore
    image: lifescience/ngb
    state: started
    ports:
        - "{{ ngb_docker_port_pair }}"
    volumes: "{{ ngb_docker_mountpoints }}"

# XXX: Ansible double item loops/zips?
- name: Get reference genomes from UMCCR
  aws_s3:
    bucket: "{{ ngb_s3_refdata_bucket }}"
    object: /Hsapiens/hg38/seq/hg38.fa 
    dest: "{{ ngb_data_dir }}/hg38.fa"
    mode: get

- name: Get reference index from UMCCR
  aws_s3:
    bucket: "{{ ngb_s3_refdata_bucket }}"
    object: /Hsapiens/hg38/seq/hg38.fa.fai
    dest: "{{ ngb_data_dir }}/hg38.fa.fai"
    mode: get

# - name: Download ref genome (hg38)
#   get_url:
#     url: "{{ hg38_ref }}"
#     dest: "{{ ngb_data_dir }}"
#     mode: 0644

# - name: Unarchive since NGB does not support compressed reference genomes
#   unarchive:
#     src: "{{ ngb_data_dir }}/hg38.fa.gz" 
#     dest: "{{ ngb_data_dir }}"
#     remote_src: yes
#     creates: "{{ ngb_data_dir }}/hg38.fa"

# - name: Index the reference genome
#   command: "bwa index hg38.fa"
#   args:
#     chdir: "{{ ngb_data_dir }}"
#     creates: "{{ ngb_data_dir }}/hg38.fa.ann"
#   async: 1000
#   poll: 0


- name: Register and expose S3 dataset to NGB
  command: "{{ item }}"
  with_items:
    - "docker exec -it ngbcore bash -c 'ngb reg_ref /ngs/hg38.fa -n hg38'"
    - "docker exec -it ngbcore bash -c 'ngb reg_file hg38 s3://umccr-primary-data-dev/COLO829BL/LR_2.2.2/phased_possorted_bam.bam -n input_BAM'"
    - "docker exec -it ngbcore bash -c 'ngb reg_dataset hg38 input_BAM input_BAM'"